.event-card {
    display: flex; 
    width: 405px;
    max-width: 100%;
    min-width: 280px;

    &__link {
        display: flex; /*чтобы растягивалось*/
        flex-direction: column; /*чтобы элементы (картинка, заголовок, текст и время) располагались друг под другом (чтобы элементы были эластичными)*/
        width: 100%; /*чтобы ширина была равна родительскому контейнеру (в нашем случае это .event-card)*/
        color: #1F1E1E; 
        text-decoration: none; /*убираем нижнее подчеркивание у ссылки (убираем тот декор, который автоматом присвается ссылке), чтобы оно не присваивалось ни ссылке, ни тексту*/

        &:hover .event-card__title /*при наведении на всю обертку ссылки, у нас будет подсвечиваться заголовок*/{ 
            color: #BC3324;
            text-decoration-color: #BC3324; /*цвет подчеркивания*/
        }
    }

    &__picture /*обертка picture полезна для создания необходимых пропорций нашего изображения*/{
        display: block; /*хорошая практика задавать для picture display block, чтобы она работала*/
        position: relative; /*обертка picture полезна для создания необходимых пропорций нашего изображения - это делается через псевдоэлемент, чтобы он заработал в первую очередь нужно задать обертке данное свойство (т.е наш псевдоэлемент будет по отношению нашей родительской обертки)*/
        margin: 0 0 25px; /**/
        width: 100%; /*чтобы картинка занимала всю ширину карточки*/
        font-size: 0; /*чтобы не было никаких лишних пробелов (для собственной безопасности)*/
        text-decoration: none;
        overflow: hidden; /*чтобы картинка не вылезала за границы (это свойство уместно добавлять, когда мы хотим, чтобы при наведении картинка увеличивалась*/

        &::after /*присваеваем нашему псевдоэлементу свойства*/{
            content: ""; /*пустой контент (нет никакого дополнительного контента)*/
            display: block; 
            width: 100%; 
            padding-top: 107.16%; /*благодаря этому свойству будут задаваться пропорции изображения (как его считать: высота картинки делим на ширину картинки и умножаем на 100 - лучше указывать 3 знака после запятой) - это нужно для того, чтобы при адаптиве изображение кооректно отображалось*/
        }
    }

    &__img {
        display: block;
        position: absolute; /*кладем картинку в позицию absolute (посколько у обертки родителя position relative), чтобы она начала вести себя как наши пропорции*/
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover; /*это свойство помогает расстянуть изображение в данной области*/
    }

    &__title {
        margin: 0 0 15px; /*зануляем отсупы, оставляя нижний отсуп между заголовком и текстом под ним*/
        min-height: 66px; /*задаем минимальную высоту для заголовка, чтобы элементы раполагались на одном уровне (у нас заголовок может быть разным, и нам надо, чтобы текст ниже был на одном уровне)*/
        color: #1F1E1E;
        font-weight: 700;
        font-size: 24px;
        line-height: 33px;
        text-decoration: underline transparent; /*задаем изначально прозрачное подчеркивание*/
        transition: color 0.2s, text-decoration-color 0.2s; /*для плавного изменения цвета при наведении*/
    }

    &__description {
        margin: 0 0 auto; /*зануляем отступы, оставляя нижний отступ auto, чтобы элемент под ним располагался на одном уровне во всех карточках*/
        font-size: 16px;
        font-weight: 400;
        line-height: 22px;
    }

    &__time {
        display: block; /*делаем строчный элемент блочным, для того чтобы отступы работали*/
        margin: 15px 0 0;
        font-weight: 300;
        font-size: 14px;
        line-height: 19px;
    }
}